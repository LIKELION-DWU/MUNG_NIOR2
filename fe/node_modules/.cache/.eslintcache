[{"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\index.js":"1","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\reportWebVitals.js":"2","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\App.js":"3","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\question\\myPage.jsx":"4","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\question\\lookAnswer.jsx":"5","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\question\\question.jsx":"6","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\respond\\answer.jsx":"7","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\respond\\record.jsx":"8","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\respond\\myPage.jsx":"9","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\question\\waiting.jsx":"10","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Join\\JoinQ.jsx":"11","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Join\\JoinR.jsx":"12","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Join\\JoinComplete.jsx":"13","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Join\\JoinChoice.jsx":"14","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Login\\LoginR.jsx":"15","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Login\\LoginQ.jsx":"16","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Main\\MainQ.jsx":"17","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Main\\PreMain.jsx":"18","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Main\\MainR.jsx":"19"},{"size":552,"mtime":1691763440991,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1691763441015,"results":"22","hashOfConfig":"21"},{"size":2496,"mtime":1691763440987,"results":"23","hashOfConfig":"21"},{"size":5638,"mtime":1691763440995,"results":"24","hashOfConfig":"21"},{"size":3806,"mtime":1691765661298,"results":"25","hashOfConfig":"21"},{"size":5585,"mtime":1691763440996,"results":"26","hashOfConfig":"21"},{"size":4212,"mtime":1691763440999,"results":"27","hashOfConfig":"21"},{"size":3695,"mtime":1691763441001,"results":"28","hashOfConfig":"21"},{"size":6101,"mtime":1691763441000,"results":"29","hashOfConfig":"21"},{"size":4993,"mtime":1691763440998,"results":"30","hashOfConfig":"21"},{"size":6485,"mtime":1691763441005,"results":"31","hashOfConfig":"21"},{"size":7381,"mtime":1691763441006,"results":"32","hashOfConfig":"21"},{"size":3022,"mtime":1691763441004,"results":"33","hashOfConfig":"21"},{"size":3007,"mtime":1691763441003,"results":"34","hashOfConfig":"21"},{"size":6931,"mtime":1691763441009,"results":"35","hashOfConfig":"21"},{"size":6389,"mtime":1691763441008,"results":"36","hashOfConfig":"21"},{"size":7004,"mtime":1691763441012,"results":"37","hashOfConfig":"21"},{"size":6951,"mtime":1691763441013,"results":"38","hashOfConfig":"21"},{"size":6967,"mtime":1691763441012,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ct8mt5",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\index.js",[],[],"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\reportWebVitals.js",[],[],"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\App.js",[],[],"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\question\\myPage.jsx",[],[],"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\question\\lookAnswer.jsx",[],[],"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\question\\question.jsx",["104","105","106","107","108","109","110"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  overflow: auto;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  width: 1280px;\r\n  height: 720px;\r\n\r\n  border: 0.5px solid #000;\r\n  background: #fff;\r\n  margin: 0px auto;\r\n\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  position: fixed;\r\n  width: 50px;\r\n  margin-top: 60px;\r\n  margin-left: 60px;\r\n  z-index: 999;\r\n`;\r\n//background: rgba(255, 255, 255, 0.78);\r\nconst MenuContainer = styled.div`\r\n  position: fixed;\r\n  width: 788px;\r\n  height: 85px;\r\n  padding-top: 40px;\r\n\r\n  margin-top: 34px;\r\n  margin-left: 480px;\r\n  background: rgba(255, 255, 255, 0.78);\r\n\r\n  line-height: 1;\r\n  z-index: 5;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  margin-left: 90px;\r\n\r\n  color: #000;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 36px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n\r\n  &.question {\r\n    position: relative;\r\n    border-bottom: 4px solid #000;\r\n    padding-bottom: 4px;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: #ff6d2e;\r\n    border-bottom-color: #ff6d2e;\r\n  }\r\n`;\r\n\r\nconst Div = styled.div`\r\n  height: 40px;\r\n\r\n  margin-top: 160px;\r\n\r\n  color: #ff6d2e;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 32px;\r\n  font-style: normal;\r\n  font-weight: 900;\r\n  line-height: 60px; /* 100% */\r\n`;\r\n\r\nconst PlateImg = styled.img`\r\n  width: 850px;\r\n\r\n  margin-left: 200px;\r\n`;\r\nconst TextInput = styled.div`\r\n  width: 330px;\r\n  height: 330px;\r\n\r\n  margin-top: -550px;\r\n  margin-left: 460px;\r\n\r\n  color: rgba(0, 0, 0, 0.64);\r\n  text-align: center;\r\n  font-family: Tmoney RoundWind;\r\n  font-size: 50px;\r\n  font-style: normal;\r\n  font-weight: 900;\r\n  line-height: normal;\r\n`;\r\n\r\nconst SendBtn = styled.img`\r\n  position: fixed;\r\n  width: 300px;\r\n\r\n  margin-top: -447px;\r\n  margin-left: 800px;\r\n`;\r\n\r\nconst Dictaphone = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const GoWaiting = () => {\r\n    navigate(\"/Waiting\");\r\n  };\r\n\r\n  const Div1 = styled.div`\r\n    height: 565px;\r\n\r\n    padding-top: 20px;\r\n    padding-left: 190px;\r\n  `;\r\n  const P = styled.p`\r\n    display: inline-block;\r\n    margin-left: 340px;\r\n\r\n    color: #000;\r\n    text-align: center;\r\n    font-family: Pretendard;\r\n    font-size: 28px;\r\n    font-style: normal;\r\n    font-weight: 800;\r\n  `;\r\n  const P2 = styled.p`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n    margin-top: -500px;\r\n\r\n    color: #ff6d2e;\r\n    font-size: 30px;\r\n    font-style: normal;\r\n    font-weight: 900;\r\n  `;\r\n\r\n  const Instruction = styled.div`\r\n    margin-top: 30px;\r\n\r\n    color: rgba(0, 0, 0, 0.64);\r\n    text-align: center;\r\n    font-family: Tmoney RoundWind;\r\n    font-size: 60px;\r\n    font-style: normal;\r\n    font-weight: 800;\r\n    line-height: normal;\r\n  `;\r\n\r\n  const Transcript = styled.p`\r\n    position: absolute;\r\n    overflow: hidden;\r\n\r\n    text-align: center;\r\n\r\n    margin-top: -625px;\r\n    margin-left: 250px;\r\n\r\n    width: 400px;\r\n    height: 400px;\r\n\r\n    color: #000;\r\n    text-align: center;\r\n    font-family: Tmoney RoundWind;\r\n    font-size: 60px;\r\n    font-style: normal;\r\n    font-weight: 800;\r\n    line-height: normal;\r\n  `;\r\n\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition,\r\n  } = useSpeechRecognition();\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Browser doesn't support speech recognition.</span>;\r\n  }\r\n\r\n  return (\r\n    <Div1>\r\n      <P>음성인식: </P>\r\n      <P2>{listening ? \"시작\" : \"멈춤\"}</P2>\r\n      <div\r\n        // onClick={SpeechRecognition.startListening}\r\n        style={{ marginTop: \"-100px\" }}\r\n      >\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_minwoo/plate.png`}\r\n          width=\"900\"\r\n        />\r\n      </div>{\" \"}\r\n      <Transcript\r\n        onClick={SpeechRecognition.startListening}\r\n        empty={transcript === \"\"}\r\n      >\r\n        {transcript}\r\n        {transcript === \"\" && (\r\n          <Instruction>\r\n            접시를 누르면\r\n            <br />\r\n            음성인식을\r\n            <br /> 시작합니다\r\n          </Instruction>\r\n        )}\r\n      </Transcript>\r\n      {/* <button onClick={SpeechRecognition.stopListening}>Stop</button> */}\r\n      {/* <button onClick={resetTranscript}>Reset</button> */}\r\n      {!listening && (\r\n        <SendBtn\r\n          onClick={GoWaiting}\r\n          src={`${process.env.PUBLIC_URL}/images_minwoo/sendBtn.png`}\r\n        ></SendBtn>\r\n      )}\r\n    </Div1>\r\n  );\r\n};\r\n\r\nconst Question = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const GoAnswer = () => {\r\n    navigate(\"/LookAnswer\");\r\n  };\r\n  const GoLogout = () => {\r\n    navigate(\"/\");\r\n  };\r\n  const GoMyPage = () => {\r\n    navigate(\"/QuestionMyPage\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Logo>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/logo.png`}\r\n          alt=\"logo\"\r\n          width=\"150px\"\r\n        />\r\n      </Logo>\r\n      <MenuContainer>\r\n        <Menu className=\"question\">질문하기</Menu>\r\n        <Menu onCick={GoLogout}>로그아웃</Menu>\r\n        <Menu onClick={GoMyPage}>질문 기록</Menu>\r\n      </MenuContainer>\r\n\r\n      <Div>\r\n        <strong>당신의 질문을 담아주세요</strong>\r\n      </Div>\r\n\r\n      <Dictaphone />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\respond\\answer.jsx",["111","112"],[],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  overflow: auto;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  width: 1280px;\r\n  height: 720px;\r\n\r\n  border: 0.5px solid #000;\r\n  background: #fff;\r\n  margin: 0px auto;\r\n`;\r\n\r\n// 상단바\r\nconst Logo = styled.div`\r\n  position: relative;\r\n\r\n  width: 50px;\r\n  margin-top: 60px;\r\n  margin-left: 60px;\r\n  z-index: 999;\r\n`;\r\nconst MenuContainer = styled.div`\r\n  position: relative;\r\n  margin-top: -60px;\r\n  margin-left: 490px;\r\n\r\n  line-height: 1;\r\n`;\r\nconst Menu = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  margin-left: 90px;\r\n\r\n  color: #000;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 36px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n\r\n  &.design {\r\n    position: relative;\r\n    border-bottom: 4px solid #000;\r\n    padding-bottom: 4px;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: #ff6d2e;\r\n    border-bottom-color: #ff6d2e;\r\n  }\r\n`;\r\n\r\n// 내용\r\nconst ListContainer = styled.div`\r\n  background: #00ff22;\r\n\r\n  margin-top: 30px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n  width: 1130px;\r\n  height: ${(props) => (props.expanded ? \"343px\" : \"210px\")};\r\n\r\n  margin-left: 50px;\r\n  margin-top: 38px;\r\n\r\n  padding-top: 35px;\r\n\r\n  border-radius: 30px;\r\n  background: #fff;\r\n  box-shadow: 2px 0px 10px 0px rgba(0, 0, 0, 0.54);\r\n`;\r\nconst QuestBox = styled.div`\r\n  height: 50px;\r\n\r\n  padding-left: 52px;\r\n\r\n  color: #000;\r\n  font-family: Pretendard;\r\n  font-size: 33px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  line-height: normal;\r\n`;\r\nconst AnswerBox = styled.div`\r\n  background: #ff0000;\r\n  position: relative;\r\n\r\n  width: 995px;\r\n  height: ${(props) => (props.expanded ? \"190px\" : \"53px\")};\r\n\r\n  margin-top: 13px;\r\n  margin-left: 50px;\r\n\r\n  padding-left: 30px;\r\n  padding-top: 20px;\r\n\r\n  border-radius: 20px;\r\n  background: #fff;\r\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.25) inset;\r\n`;\r\nconst InputAnswer = styled.input`\r\n  width: 950px;\r\n  height: ${(props) => (props.expanded ? \"120px\" : \"40px\")};\r\n  border: none;\r\n\r\n  color: #000;\r\n  font-family: Pretendard;\r\n  font-size: 20px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: normal;\r\n`;\r\nconst NextBtn = styled.button`\r\n  height: 60px;\r\n  width: 90px;\r\n\r\n  margin-left: 998px;\r\n  margin-top: 0px;\r\n\r\n  background-color: transparent;\r\n  border: none;\r\n`;\r\nconst List = () => {\r\n  //\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  const handleInputClick = () => {\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <WhiteBox expanded={isExpanded}>\r\n      <QuestBox>Q. 키오스크 결제는 어떻게?</QuestBox>\r\n      <AnswerBox expanded={isExpanded}>\r\n        <InputAnswer\r\n          onClick={handleInputClick}\r\n          expanded={isExpanded}\r\n        ></InputAnswer>\r\n        <img\r\n          src=\"./images_minwoo/addImg.png\"\r\n          style={{\r\n            width: \"70px\",\r\n            position: \"absolute\",\r\n            bottom: \"6px\",\r\n            right: \"10px\",\r\n          }}\r\n        />\r\n      </AnswerBox>\r\n      <NextBtn>\r\n        <img src=\"./images_minwoo/next.png\" style={{ width: \"180px\" }} />\r\n      </NextBtn>\r\n    </WhiteBox>\r\n  );\r\n};\r\n\r\n//페이지 함수\r\nconst Answer = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const GoMyPage = () => {\r\n    navigate(\"/RespondMyPage\");\r\n  };\r\n\r\n  const GoAnswer = () => {\r\n    navigate(\"/Answer\");\r\n  };\r\n\r\n  const GoLogout = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Logo>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/logo.png`}\r\n          alt=\"logo\"\r\n          style={{ width: \"150px\" }}\r\n        />\r\n      </Logo>\r\n\r\n      <MenuContainer>\r\n        <Menu onClick={GoAnswer} className=\"design\">\r\n          답변하기\r\n        </Menu>\r\n        <Menu onClick={GoLogout}>로그아웃</Menu>\r\n        <Menu onClick={GoMyPage}>나의 기록</Menu>\r\n      </MenuContainer>\r\n\r\n      <ListContainer>\r\n        <List />\r\n        <List />\r\n        <List />\r\n      </ListContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\respond\\record.jsx",[],[],"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\respond\\myPage.jsx",[],[],"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\minwoo\\question\\waiting.jsx",["113","114"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n// import { motion } from \"framer-motion\";\r\n// import { useSpring, animated } from \"react-spring\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  width: 1280px;\r\n  height: 720px;\r\n\r\n  border: 0.5px solid #000;\r\n  background: #fff;\r\n  margin: 0px auto;\r\n\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  position: relative;\r\n  width: 50px;\r\n  margin-top: 60px;\r\n  margin-left: 60px;\r\n  z-index: 999;\r\n`;\r\n\r\nconst MenuContainer = styled.div`\r\n  position: relative;\r\n  margin-top: -60px;\r\n  margin-left: 300px;\r\n\r\n  line-height: 1;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  margin-left: 90px;\r\n\r\n  color: #000;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 36px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n\r\n  &.design {\r\n    position: relative;\r\n    border-bottom: 4px solid #000;\r\n    padding-bottom: 4px;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: #ff6d2e;\r\n    border-bottom-color: #ff6d2e;\r\n  }\r\n`;\r\n\r\nconst TextWait = styled.h1`\r\n  margin-top: -220px;\r\n  height: 40px;\r\n\r\n  color: #ff6d2e;\r\n  text-align: center;\r\n  font-family: Tmoney RoundWind;\r\n  font-size: 55px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  line-height: 100px; /* 100% */\r\n`;\r\nconst H1 = styled.div`\r\n  margin-left: 480px;\r\n\r\n  color: #000;\r\n  font-family: Tmoney RoundWind;\r\n  font-size: 30px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 100px;\r\n  letter-spacing: -4.8px;\r\n`;\r\n\r\nconst TypingEffect = () => {\r\n  const textToType = \". . .\";\r\n  const [typedText, setTypedText] = useState(\"\");\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  const [repeatCount, setRepeatCount] = useState(0);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const H1 = styled.h1`\r\n    color: #000;\r\n    font-family: Tmoney RoundWind;\r\n    font-size: 30px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 100px;\r\n    letter-spacing: -4.8px;\r\n\r\n    text-align: center;\r\n  `;\r\n\r\n  const Div = styled.div`\r\n    margin-top: -120px;\r\n    margin-left: 300px;\r\n  `;\r\n\r\n  useEffect(() => {\r\n    if (repeatCount < 3) {\r\n      if (currentIndex < textToType.length) {\r\n        const typingTimeout = setTimeout(() => {\r\n          setTypedText(textToType.slice(0, currentIndex + 1));\r\n          setCurrentIndex(currentIndex + 1);\r\n        }, 230); // 100ms 간격으로 타이핑 효과 생성\r\n\r\n        return () => clearTimeout(typingTimeout);\r\n      } else {\r\n        setTimeout(() => {\r\n          setTypedText(\"\");\r\n          setCurrentIndex(0);\r\n          setRepeatCount(repeatCount + 1);\r\n        }, 1400); // 0.5초 대기 후 다시 타이핑 시작\r\n\r\n        if (repeatCount === 2) {\r\n          navigate(\"/LookAnswer\");\r\n        }\r\n      }\r\n    }\r\n  }, [currentIndex, repeatCount]);\r\n\r\n  return (\r\n    <Div>\r\n      <H1>{typedText}</H1>\r\n    </Div>\r\n  );\r\n};\r\n\r\nconst Waiting = () => {\r\n  const Div = styled.div`\r\n    margin-top: 50px;\r\n  `;\r\n\r\n  return (\r\n    <Container>\r\n      <Logo>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/logo.png`}\r\n          alt=\"logo\"\r\n          width=\"150px\"\r\n        />\r\n      </Logo>\r\n      <MenuContainer>\r\n        <Menu className=\"design\">질문하기</Menu>\r\n        <Menu>답변보기</Menu>\r\n        <Menu>로그아웃</Menu>\r\n        <Menu>나의 기록</Menu>\r\n      </MenuContainer>\r\n\r\n      <Div>\r\n        <svg width=\"600\" height=\"480\">\r\n          <path\r\n            id=\"path\"\r\n            d=\"M-76.8892 385.52C38.2658 325.585 167.371 268.305 262.715 188.38C299.436 157.597 319.2 124.133 327.444 84.3661C335.223 46.841 328.402 8.7779 271.809 3.39645C237.233 0.108559 196.356 5.89709 169.191 25.4762C134.189 50.7036 130.499 89.0426 132.328 122.264C135.19 174.264 153.801 243.959 224.389 263.72C259.224 273.471 300.345 272.517 337.301 271.492C399.428 269.769 461.786 264.11 523.423 255.659C619.084 242.543 716.485 223.611 805.048 189.754C853.61 171.19 902.074 150.053 943.071 122.112C978.232 98.1488 1002.33 70.0512 1023.53 38.4827M1023.53 38.4827C1041.66 11.4807 1012.31 67.0987 1023.53 38.4827Z\"\r\n            fill=\"none\"\r\n            stroke=\"#FF7C43\"\r\n            strokeWidth=\"3.5\"\r\n            stroke-linecap=\"round\"\r\n            stroke-dasharray=\"10 10\"\r\n          ></path>\r\n          <image\r\n            x=\"-200\"\r\n            y=\"-124\"\r\n            width=\"330\"\r\n            height=\"330\"\r\n            xlinkHref={`${process.env.PUBLIC_URL}/images_minwoo/airplane.png`}\r\n          >\r\n            <animateMotion dur=\"2.5s\" repeatCount=\"indefinite\">\r\n              <mpath href=\"#path\" />\r\n            </animateMotion>\r\n          </image>\r\n        </svg>\r\n      </Div>\r\n\r\n      <TextWait>잠시만 기다려주세요</TextWait>\r\n      <H1>답변을 가져오는 중입니다</H1>\r\n      <TypingEffect />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Waiting;\r\n","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Join\\JoinQ.jsx",[],[],"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Join\\JoinR.jsx",[],[],"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Join\\JoinComplete.jsx",["115"],[],"import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  width: 1280px;\r\n  height: 720px;\r\n\r\n  border: 0.5px solid #000;\r\n  background: linear-gradient(\r\n    180deg,\r\n    rgba(255, 255, 255, 0.87) 0%,\r\n    #ff4d00 100%\r\n  );\r\n  margin: 0px auto;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  position: relative;\r\n  width: 50px;\r\n  margin-top: 60px;\r\n  margin-left: 60px;\r\n  z-index: 999;\r\n`;\r\n\r\nconst MenuContainer = styled.div`\r\n  position: relative;\r\n  margin-top: -40px;\r\n  margin-left: 310px;\r\n\r\n  line-height: 1;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  margin-left: 120px;\r\n\r\n  color: #000;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 36px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n\r\n  &.join {\r\n    position: relative;\r\n    border-bottom: 4px solid #000;\r\n    padding-bottom: 4px;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: #ff6d2e;\r\n    border-bottom-color: #ff6d2e;\r\n  }\r\n`;\r\n\r\nconst Complete = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin: auto;\r\n\r\n  top: 130px;\r\n\r\n  color: #fff;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 60px;\r\n  font-style: normal;\r\n  font-weight: 900;\r\n  line-height: normal;\r\n\r\n  img {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nconst JoinComplete = () => {\r\n  const navigate = useNavigate();\r\n  const gotoJoinChoice = () => {\r\n    navigate(\"/JoinChoice\");\r\n  };\r\n  const gotoLoginQ = () => {\r\n    navigate(\"/LoginQ\");\r\n  };\r\n\r\n  // 일정 시간 후에 페이지 이동 함수 호출\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      gotoLoginQ();\r\n    }, 3000);\r\n\r\n    return () => {\r\n      clearTimeout(timeout); // 컴포넌트 언마운트 시 타임아웃 클리어\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Logo>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/logo.png`}\r\n          alt=\"logo\"\r\n          width=\"150px\"\r\n        />\r\n      </Logo>\r\n      <MenuContainer>\r\n        <Menu>질문</Menu>\r\n        <Menu>답변</Menu>\r\n        <Menu>로그인</Menu>\r\n        <Menu className=\"join\" onClick={gotoJoinChoice}>\r\n          회원가입\r\n        </Menu>\r\n      </MenuContainer>\r\n      <Complete>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/complete.png`}\r\n          alt=\"complete\"\r\n          width=\"200px\"\r\n        />\r\n        회원가입 완료\r\n        <br />\r\n        <span\r\n          style={{\r\n            color: \"#fff\",\r\n            fontSize: \"30px\",\r\n            fontWeight: \"900\",\r\n            fontFamily: \"Pretendard\",\r\n            fontStyle: \"normal\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          3초 후에 로그인 창으로 넘어갑니다.\r\n        </span>\r\n      </Complete>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default JoinComplete;\r\n","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Join\\JoinChoice.jsx",[],[],"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Login\\LoginR.jsx",[],[],"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Login\\LoginQ.jsx",[],[],"C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Main\\MainQ.jsx",["116","117","118"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./CustomScrollbar.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  width: 1280px;\r\n  height: 720px;\r\n\r\n  border: 0.5px solid #000;\r\n  background: #fff;\r\n  margin: 0px auto;\r\n\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  position: relative;\r\n  width: 50px;\r\n  margin-top: 60px;\r\n  margin-left: 60px;\r\n  z-index: 999;\r\n`;\r\n\r\nconst MenuContainer = styled.div`\r\n  position: fixed;\r\n  width: 788px;\r\n  height: 85px;\r\n  padding-top: 40px;\r\n\r\n  margin-top: -87px;\r\n  margin-left: 480px;\r\n  background: rgba(255, 255, 255, 0.78);\r\n\r\n  line-height: 1;\r\n  z-index: 5;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  margin-left: 80px;\r\n\r\n  color: #7e7c7c;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 36px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  line-height: normal;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: #ff6d2e;\r\n  }\r\n`;\r\n\r\nconst Images = styled.div`\r\n  position: relative;\r\n\r\n  margin-top: 65px;\r\n  left: 180px;\r\n\r\n  width: 200px;\r\n`;\r\n\r\nconst DotsContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  margin-left: auto;\r\n  top: -5px;\r\n`;\r\n\r\nconst Dots = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  top: -25px;\r\n  left: 200px;\r\n  z-index: 999;\r\n\r\n  width: 11px;\r\n  height: 11px;\r\n\r\n  border-radius: 50%;\r\n  background-color: white;\r\n  margin-right: 10px;\r\n  background-color: ${({ active }) =>\r\n    active ? \"white\" : \"rgba(255, 255, 255, 0.5)\"};\r\n`;\r\n\r\nconst Orangebox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 800px;\r\n  height: 83px;\r\n  flex-shrink: 0;\r\n\r\n  left: 481px;\r\n  top: -60px;\r\n  margin-bottom: 70px;\r\n\r\n  border-radius: 150px 0px 0px 10px;\r\n  background: #ff6d2e;\r\n\r\n  color: #fff;\r\n  text-align: center;\r\n  font-family: Tmoney RoundWind;\r\n  font-size: 27px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  line-height: normal;\r\n`;\r\n\r\nconst Breakthrough = styled.div`\r\n  position: relative;\r\n\r\n  top: 80px;\r\n  left: 130px;\r\n`;\r\n\r\nconst Frame = styled.div`\r\n  position: relative;\r\n\r\n  top: -200px;\r\n  left: 530px;\r\n`;\r\n\r\nconst Light = styled.div`\r\n  position: relative;\r\n\r\n  top: -400px;\r\n  left: 130px;\r\n`;\r\n\r\nconst RectangleK = styled.div`\r\n  position: relative;\r\n\r\n  text-align: center;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: auto;\r\n  margin-top: -200px;\r\n\r\n  width: 1150px;\r\n  height: 280px;\r\n\r\n  border-radius: 109.119px;\r\n  background: #fff;\r\n  box-shadow: 0px 0px 25px 2px rgba(0, 0, 0, 0.15);\r\n\r\n  img + img {\r\n    margin-left: 40px;\r\n  }\r\n\r\n  z-index: 100;\r\n`;\r\n\r\nconst RectangleGray = styled.div`\r\n  position: relative;\r\n  top: -150px;\r\n\r\n  width: 1280px;\r\n  height: 1400px;\r\n\r\n  border-radius: 0px 150px 0px 0px;\r\n  background: linear-gradient(\r\n    180deg,\r\n    rgba(186, 186, 186, 0.2) 0%,\r\n    rgba(0, 0, 0, 0) 100%\r\n  );\r\n\r\n  img {\r\n    position: relative;\r\n    top: 370px;\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: auto;\r\n  }\r\n\r\n  img + img {\r\n    margin-top: 60px;\r\n  }\r\n`;\r\n\r\nconst MainQ = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const gotoQuestionMyPage = () => {\r\n    navigate(\"/QuestionMyPage\");\r\n  };\r\n\r\n  const gotoQuestion = () => {\r\n    navigate(\"/Question\");\r\n  };\r\n\r\n  const [selectedImageIndex, setSelectedImageIndex] = useState(0);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  // 점 클릭 -> 이미지\r\n  const handleDotClick = (index) => {\r\n    setSelectedImageIndex(index);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  // 이미지 배열\r\n  const images = [\r\n    `${process.env.PUBLIC_URL}/images_semin/image1.png`,\r\n    `${process.env.PUBLIC_URL}/images_semin/image2.png`,\r\n    `${process.env.PUBLIC_URL}/images_semin/image3.png`,\r\n  ];\r\n\r\n  // 이미지 바뀌기 -> 마지막 사진이면 처음으로\r\n  const changeImage = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n  };\r\n\r\n  // 3.5초마다 변경\r\n  useEffect(() => {\r\n    const slideshowInterval = setInterval(changeImage, 3500);\r\n\r\n    return () => clearInterval(slideshowInterval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSelectedImageIndex(currentIndex);\r\n  }, [currentIndex]);\r\n\r\n  return (\r\n    <Container>\r\n      <Logo>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/logo.png`}\r\n          alt=\"logo\"\r\n          width=\"150px\"\r\n        />\r\n      </Logo>\r\n      <MenuContainer>\r\n        <Menu onClick={gotoQuestion}>질문하기</Menu>\r\n        <Menu>로그아웃</Menu>\r\n        <Menu onClick={gotoQuestionMyPage}>질문 기록</Menu>\r\n      </MenuContainer>\r\n      <Images>\r\n        <img\r\n          src={images[currentIndex]}\r\n          alt={`image${currentIndex + 1}`}\r\n          width=\"1100px\"\r\n          height=\"500px\"\r\n        />\r\n      </Images>\r\n      <DotsContainer>\r\n        {images.map((_, index) => (\r\n          <Dots\r\n            key={index}\r\n            onClick={() => handleDotClick(index)}\r\n            active={index === selectedImageIndex}\r\n          />\r\n        ))}\r\n      </DotsContainer>\r\n      <Orangebox>알고 싶은 만큼 질문해주세요. 자세히 알려드립니다.</Orangebox>\r\n      <Breakthrough>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/breakthrough.png`}\r\n          alt=\"breakthrough\"\r\n          width=\"380px\"\r\n        />\r\n      </Breakthrough>\r\n      <Frame>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/Frame 52.png`}\r\n          alt=\"frame\"\r\n          width=\"670px\"\r\n          height=\"620px\"\r\n        />\r\n      </Frame>\r\n      <Light>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/light.png`}\r\n          alt=\"light\"\r\n          width=\"350px\"\r\n          height=\"280px\"\r\n        />\r\n      </Light>\r\n      <RectangleK>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/kioskimg.png`}\r\n          alt=\"kioskimg\"\r\n          width=\"650px\"\r\n          height=\"130px\"\r\n        />\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/kioskATM.png`}\r\n          alt=\"kioskATM\"\r\n          width=\"230px\"\r\n          height=\"150px\"\r\n        />\r\n      </RectangleK>\r\n      <RectangleGray>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/answertext.png`}\r\n          alt=\"answertext\"\r\n          width=\"480px\"\r\n          height=\"130px\"\r\n        />\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/howto.png`}\r\n          alt=\"howto\"\r\n          width=\"150px\"\r\n          height=\"50px\"\r\n        />\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/howtoDetail.png`}\r\n          alt=\"howtoDetail\"\r\n          width=\"700px\"\r\n          height=\"700px\"\r\n        />\r\n      </RectangleGray>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainQ;\r\n","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Main\\PreMain.jsx",["119","120"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./CustomScrollbar.css\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  width: 1280px;\r\n  height: 720px;\r\n\r\n  border: 0.5px solid #000;\r\n  background: #fff;\r\n  margin: 0px auto;\r\n\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  position: relative;\r\n  width: 50px;\r\n  margin-top: 60px;\r\n  margin-left: 60px;\r\n  z-index: 999;\r\n`;\r\n\r\nconst MenuContainer = styled.div`\r\n  position: fixed;\r\n  width: 910px;\r\n  height: 85px;\r\n  padding-top: 40px;\r\n\r\n  margin-top: -80px;\r\n  margin-left: 310px;\r\n  background: rgba(255, 255, 255, 0.78);\r\n\r\n  line-height: 1;\r\n  z-index: 5;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  margin-left: 120px;\r\n\r\n  color: #000;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 36px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: #ff6d2e;\r\n  }\r\n`;\r\n\r\nconst Images = styled.div`\r\n  position: relative;\r\n\r\n  margin-top: 65px;\r\n  left: 180px;\r\n\r\n  width: 200px;\r\n`;\r\n\r\nconst DotsContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  margin-left: auto;\r\n  top: -5px;\r\n`;\r\n\r\nconst Dots = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  top: -25px;\r\n  left: 200px;\r\n  z-index: 999;\r\n\r\n  width: 11px;\r\n  height: 11px;\r\n\r\n  border-radius: 50%;\r\n  background-color: white;\r\n  margin-right: 10px;\r\n  background-color: ${({ active }) =>\r\n    active ? \"white\" : \"rgba(255, 255, 255, 0.5)\"};\r\n`;\r\n\r\nconst Orangebox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 800px;\r\n  height: 83px;\r\n  flex-shrink: 0;\r\n\r\n  left: 481px;\r\n  top: -60px;\r\n  margin-bottom: 70px;\r\n\r\n  border-radius: 150px 0px 0px 10px;\r\n  background: #ff6d2e;\r\n\r\n  color: #fff;\r\n  text-align: center;\r\n  font-family: Tmoney RoundWind;\r\n  font-size: 27px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  line-height: normal;\r\n`;\r\n\r\nconst Breakthrough = styled.div`\r\n  position: relative;\r\n\r\n  top: 80px;\r\n  left: 130px;\r\n`;\r\n\r\nconst Frame = styled.div`\r\n  position: relative;\r\n\r\n  top: -200px;\r\n  left: 530px;\r\n`;\r\n\r\nconst Light = styled.div`\r\n  position: relative;\r\n\r\n  top: -400px;\r\n  left: 130px;\r\n`;\r\n\r\nconst RectangleK = styled.div`\r\n  position: relative;\r\n\r\n  text-align: center;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: auto;\r\n  margin-top: -200px;\r\n\r\n  width: 1150px;\r\n  height: 280px;\r\n\r\n  border-radius: 109.119px;\r\n  background: #fff;\r\n  box-shadow: 0px 0px 25px 2px rgba(0, 0, 0, 0.15);\r\n\r\n  img + img {\r\n    margin-left: 40px;\r\n  }\r\n\r\n  z-index: 100;\r\n`;\r\n\r\nconst RectangleGray = styled.div`\r\n  position: relative;\r\n  top: -150px;\r\n\r\n  width: 1280px;\r\n  height: 1400px;\r\n\r\n  border-radius: 0px 150px 0px 0px;\r\n  background: linear-gradient(\r\n    180deg,\r\n    rgba(186, 186, 186, 0.2) 0%,\r\n    rgba(0, 0, 0, 0) 100%\r\n  );\r\n\r\n  img {\r\n    position: relative;\r\n    top: 370px;\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: auto;\r\n  }\r\n\r\n  img + img {\r\n    margin-top: 60px;\r\n  }\r\n`;\r\n\r\nconst PreMain = () => {\r\n  const navigate = useNavigate();\r\n  const gotoJoinChoice = () => {\r\n    navigate(\"/JoinChoice\");\r\n  };\r\n  const gotoLoginQ = () => {\r\n    navigate(\"/LoginQ\");\r\n  };\r\n\r\n  const [selectedImageIndex, setSelectedImageIndex] = useState(0);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  // 점 클릭 -> 이미지\r\n  const handleDotClick = (index) => {\r\n    setSelectedImageIndex(index);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  // 이미지 배열\r\n  const images = [\r\n    `${process.env.PUBLIC_URL}/images_semin/image1.png`,\r\n    `${process.env.PUBLIC_URL}/images_semin/image2.png`,\r\n    `${process.env.PUBLIC_URL}/images_semin/image3.png`,\r\n  ];\r\n\r\n  // 이미지 바뀌기 -> 마지막 사진이면 처음으로\r\n  const changeImage = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n  };\r\n\r\n  // 3.5초마다 변경\r\n  useEffect(() => {\r\n    const slideshowInterval = setInterval(changeImage, 3500);\r\n\r\n    return () => clearInterval(slideshowInterval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSelectedImageIndex(currentIndex);\r\n  }, [currentIndex]);\r\n\r\n  return (\r\n    <Container>\r\n      <Logo>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/logo.png`}\r\n          alt=\"logo\"\r\n          width=\"150px\"\r\n        />\r\n      </Logo>\r\n      <MenuContainer>\r\n        <Menu>질문</Menu>\r\n        <Menu>답변</Menu>\r\n        <Menu onClick={gotoLoginQ}>로그인</Menu>\r\n        <Menu onClick={gotoJoinChoice}>회원가입</Menu>\r\n      </MenuContainer>\r\n      <Images>\r\n        <img\r\n          src={images[currentIndex]}\r\n          alt={`image${currentIndex + 1}`}\r\n          width=\"1100px\"\r\n          height=\"500px\"\r\n        />\r\n      </Images>\r\n      <DotsContainer>\r\n        {images.map((_, index) => (\r\n          <Dots\r\n            key={index}\r\n            onClick={() => handleDotClick(index)}\r\n            active={index === selectedImageIndex}\r\n          />\r\n        ))}\r\n      </DotsContainer>\r\n      <Orangebox>알고 싶은 만큼 질문해주세요. 자세히 알려드립니다.</Orangebox>\r\n      <Breakthrough>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/breakthrough.png`}\r\n          alt=\"breakthrough\"\r\n          width=\"380px\"\r\n        />\r\n      </Breakthrough>\r\n      <Frame>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/Frame 52.png`}\r\n          alt=\"frame\"\r\n          width=\"670px\"\r\n          height=\"620px\"\r\n        />\r\n      </Frame>\r\n      <Light>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/light.png`}\r\n          alt=\"light\"\r\n          width=\"350px\"\r\n          height=\"280px\"\r\n        />\r\n      </Light>\r\n      <RectangleK>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/kioskimg.png`}\r\n          alt=\"kioskimg\"\r\n          width=\"650px\"\r\n          height=\"130px\"\r\n        />\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/kioskATM.png`}\r\n          alt=\"kioskATM\"\r\n          width=\"230px\"\r\n          height=\"150px\"\r\n        />\r\n      </RectangleK>\r\n      <RectangleGray>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/answertext.png`}\r\n          alt=\"answertext\"\r\n          width=\"480px\"\r\n          height=\"130px\"\r\n        />\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/howto.png`}\r\n          alt=\"howto\"\r\n          width=\"150px\"\r\n          height=\"50px\"\r\n        />\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/howtoDetail.png`}\r\n          alt=\"howtoDetail\"\r\n          width=\"700px\"\r\n          height=\"700px\"\r\n        />\r\n      </RectangleGray>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PreMain;\r\n","C:\\Users\\hsoap\\OneDrive\\바탕 화면\\멋사-멍팀 작업물\\NIOR_PROJECT2\\fe\\src\\pages\\semin\\Main\\MainR.jsx",["121","122","123"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./CustomScrollbar.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  width: 1280px;\r\n  height: 720px;\r\n\r\n  border: 0.5px solid #000;\r\n  background: #fff;\r\n  margin: 0px auto;\r\n\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  position: relative;\r\n  width: 50px;\r\n  margin-top: 60px;\r\n  margin-left: 60px;\r\n  z-index: 999;\r\n`;\r\n\r\nconst MenuContainer = styled.div`\r\n  position: fixed;\r\n  width: 788px;\r\n  height: 85px;\r\n  padding-top: 40px;\r\n\r\n  margin-top: -82px;\r\n  margin-left: 461px;\r\n  background: rgba(255, 255, 255, 0.78);\r\n\r\n  line-height: 1;\r\n  z-index: 5;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  margin-left: 90px;\r\n\r\n  color: #7e7c7c;\r\n  text-align: center;\r\n  font-family: Pretendard;\r\n  font-size: 36px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: #ff6d2e;\r\n  }\r\n`;\r\n\r\nconst Images = styled.div`\r\n  position: relative;\r\n\r\n  margin-top: 65px;\r\n  left: 180px;\r\n\r\n  width: 200px;\r\n`;\r\n\r\nconst DotsContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  margin-left: auto;\r\n  top: -5px;\r\n`;\r\n\r\nconst Dots = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  top: -25px;\r\n  left: 200px;\r\n  z-index: 999;\r\n\r\n  width: 11px;\r\n  height: 11px;\r\n\r\n  border-radius: 50%;\r\n  background-color: white;\r\n  margin-right: 10px;\r\n  background-color: ${({ active }) =>\r\n    active ? \"white\" : \"rgba(255, 255, 255, 0.5)\"};\r\n`;\r\n\r\nconst Orangebox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 800px;\r\n  height: 83px;\r\n  flex-shrink: 0;\r\n\r\n  left: 481px;\r\n  top: -60px;\r\n  margin-bottom: 70px;\r\n\r\n  border-radius: 150px 0px 0px 10px;\r\n  background: #ff6d2e;\r\n\r\n  color: #fff;\r\n  text-align: center;\r\n  font-family: Tmoney RoundWind;\r\n  font-size: 27px;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  line-height: normal;\r\n`;\r\n\r\nconst Breakthrough = styled.div`\r\n  position: relative;\r\n\r\n  top: 80px;\r\n  left: 130px;\r\n`;\r\n\r\nconst Frame = styled.div`\r\n  position: relative;\r\n\r\n  top: -200px;\r\n  left: 530px;\r\n`;\r\n\r\nconst Light = styled.div`\r\n  position: relative;\r\n\r\n  top: -400px;\r\n  left: 130px;\r\n`;\r\n\r\nconst RectangleK = styled.div`\r\n  position: relative;\r\n\r\n  text-align: center;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: auto;\r\n  margin-top: -200px;\r\n\r\n  width: 1150px;\r\n  height: 280px;\r\n\r\n  border-radius: 109.119px;\r\n  background: #fff;\r\n  box-shadow: 0px 0px 25px 2px rgba(0, 0, 0, 0.15);\r\n\r\n  img + img {\r\n    margin-left: 40px;\r\n  }\r\n\r\n  z-index: 100;\r\n`;\r\n\r\nconst RectangleGray = styled.div`\r\n  position: relative;\r\n  top: -150px;\r\n\r\n  width: 1280px;\r\n  height: 1400px;\r\n\r\n  border-radius: 0px 150px 0px 0px;\r\n  background: linear-gradient(\r\n    180deg,\r\n    rgba(186, 186, 186, 0.2) 0%,\r\n    rgba(0, 0, 0, 0) 100%\r\n  );\r\n\r\n  img {\r\n    position: relative;\r\n    top: 370px;\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: auto;\r\n  }\r\n\r\n  img + img {\r\n    margin-top: 60px;\r\n  }\r\n`;\r\n\r\nconst MainR = () => {\r\n  const navigate = useNavigate();\r\n  const gotoAnswer = () => {\r\n    navigate(\"/Answer\");\r\n  };\r\n  const gotoRespondMyPage = () => {\r\n    navigate(\"/RespondMyPage\");\r\n  };\r\n\r\n  const [selectedImageIndex, setSelectedImageIndex] = useState(0);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  // 점 클릭 -> 이미지\r\n  const handleDotClick = (index) => {\r\n    setSelectedImageIndex(index);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  // 이미지 배열\r\n  const images = [\r\n    `${process.env.PUBLIC_URL}/images_semin/image1.png`,\r\n    `${process.env.PUBLIC_URL}/images_semin/image2.png`,\r\n    `${process.env.PUBLIC_URL}/images_semin/image3.png`,\r\n  ];\r\n\r\n  // 이미지 바뀌기 -> 마지막 사진이면 처음으로\r\n  const changeImage = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n  };\r\n\r\n  // 3.5초마다 변경\r\n  useEffect(() => {\r\n    const slideshowInterval = setInterval(changeImage, 3500);\r\n\r\n    return () => clearInterval(slideshowInterval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSelectedImageIndex(currentIndex);\r\n  }, [currentIndex]);\r\n\r\n  return (\r\n    <Container>\r\n      <Logo>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/logo.png`}\r\n          alt=\"logo\"\r\n          width=\"150px\"\r\n        />\r\n      </Logo>\r\n      <MenuContainer>\r\n        <Menu onClick={gotoAnswer}>답변하기</Menu>\r\n        <Menu>로그아웃</Menu>\r\n        <Menu onClick={gotoRespondMyPage}>답변 기록</Menu>\r\n      </MenuContainer>\r\n      <Images>\r\n        <img\r\n          src={images[currentIndex]}\r\n          alt={`image${currentIndex + 1}`}\r\n          width=\"1100px\"\r\n          height=\"500px\"\r\n        />\r\n      </Images>\r\n      <DotsContainer>\r\n        {images.map((_, index) => (\r\n          <Dots\r\n            key={index}\r\n            onClick={() => handleDotClick(index)}\r\n            active={index === selectedImageIndex}\r\n          />\r\n        ))}\r\n      </DotsContainer>\r\n      <Orangebox>알고 싶은 만큼 질문해주세요. 자세히 알려드립니다.</Orangebox>\r\n      <Breakthrough>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/breakthrough.png`}\r\n          alt=\"breakthrough\"\r\n          width=\"380px\"\r\n        />\r\n      </Breakthrough>\r\n      <Frame>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/Frame 52.png`}\r\n          alt=\"frame\"\r\n          width=\"670px\"\r\n          height=\"620px\"\r\n        />\r\n      </Frame>\r\n      <Light>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/light.png`}\r\n          alt=\"light\"\r\n          width=\"350px\"\r\n          height=\"280px\"\r\n        />\r\n      </Light>\r\n      <RectangleK>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/kioskimg.png`}\r\n          alt=\"kioskimg\"\r\n          width=\"650px\"\r\n          height=\"130px\"\r\n        />\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/kioskATM.png`}\r\n          alt=\"kioskATM\"\r\n          width=\"230px\"\r\n          height=\"150px\"\r\n        />\r\n      </RectangleK>\r\n      <RectangleGray>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/answertext.png`}\r\n          alt=\"answertext\"\r\n          width=\"480px\"\r\n          height=\"130px\"\r\n        />\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/howto.png`}\r\n          alt=\"howto\"\r\n          width=\"150px\"\r\n          height=\"50px\"\r\n        />\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images_semin/howtoDetail.png`}\r\n          alt=\"howtoDetail\"\r\n          width=\"700px\"\r\n          height=\"700px\"\r\n        />\r\n      </RectangleGray>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainR;\r\n",{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"128","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"129","line":90,"column":7,"nodeType":"126","messageId":"127","endLine":90,"endColumn":15},{"ruleId":"124","severity":1,"message":"130","line":95,"column":7,"nodeType":"126","messageId":"127","endLine":95,"endColumn":16},{"ruleId":"124","severity":1,"message":"131","line":190,"column":5,"nodeType":"126","messageId":"127","endLine":190,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":206,"column":9,"nodeType":"134","endLine":209,"endColumn":11},{"ruleId":"124","severity":1,"message":"135","line":240,"column":9,"nodeType":"126","messageId":"127","endLine":240,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":152,"column":9,"nodeType":"134","endLine":160,"endColumn":11},{"ruleId":"132","severity":1,"message":"133","line":163,"column":9,"nodeType":"134","endLine":163,"endColumn":74},{"ruleId":"124","severity":1,"message":"136","line":2,"column":18,"nodeType":"126","messageId":"127","endLine":2,"endColumn":27},{"ruleId":"137","severity":1,"message":"138","line":134,"column":6,"nodeType":"139","endLine":134,"endColumn":33,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":103,"column":6,"nodeType":"139","endLine":103,"endColumn":8,"suggestions":"142"},{"ruleId":"124","severity":1,"message":"143","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":13},{"ruleId":"137","severity":1,"message":"144","line":232,"column":6,"nodeType":"139","endLine":232,"endColumn":8,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":253,"column":9,"nodeType":"134","endLine":258,"endColumn":11},{"ruleId":"137","severity":1,"message":"144","line":228,"column":6,"nodeType":"139","endLine":228,"endColumn":8,"suggestions":"148"},{"ruleId":"146","severity":1,"message":"147","line":250,"column":9,"nodeType":"134","endLine":255,"endColumn":11},{"ruleId":"124","severity":1,"message":"143","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":13},{"ruleId":"137","severity":1,"message":"144","line":229,"column":6,"nodeType":"139","endLine":229,"endColumn":8,"suggestions":"149"},{"ruleId":"146","severity":1,"message":"147","line":250,"column":9,"nodeType":"134","endLine":255,"endColumn":11},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'PlateImg' is assigned a value but never used.","'TextInput' is assigned a value but never used.","'resetTranscript' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'GoAnswer' is assigned a value but never used.","'keyframes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["150"],"React Hook useEffect has a missing dependency: 'gotoLoginQ'. Either include it or remove the dependency array.",["151"],"'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'changeImage'. Either include it or remove the dependency array.",["152"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["153"],["154"],{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"159","fix":"161"},{"desc":"159","fix":"162"},"Update the dependencies array to be: [currentIndex, navigate, repeatCount]",{"range":"163","text":"164"},"Update the dependencies array to be: [gotoLoginQ]",{"range":"165","text":"166"},"Update the dependencies array to be: [changeImage]",{"range":"167","text":"168"},{"range":"169","text":"168"},{"range":"170","text":"168"},[2881,2908],"[currentIndex, navigate, repeatCount]",[1895,1897],"[gotoLoginQ]",[4274,4276],"[changeImage]",[4206,4208],[4240,4242]]